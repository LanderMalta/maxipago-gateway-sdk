name: Release Pipeline

on:
  push:
    branches:
      - 'main'
env:
  MP_TEST_ID: ${{ secrets.MP_TEST_ID }}
  MP_TEST_KEY: ${{ secrets.MP_TEST_KEY }}
  NPM_TOKEN: ${{ vars.NPM_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Bump version and generate changelog
        run: |
          pnpm add standard-version --save-dev
          npx standard-version

      - name: Create or update tag
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag -d v$VERSION || true
          git tag v$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Add and commit changes
        run: |
          git add package.json CHANGELOG.md
          git diff-index --quiet HEAD || git commit -m "chore(release): $VERSION"
          git push origin main --tags

      - name: Create GitHub Release
        uses: actions/github-script@v6
        with:
          script: |
            const version = process.env.VERSION;
            if (!version) {
              throw new Error('VERSION not found');
            }
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${version}`,
              name: `v${version}`,
              body: `Release v${version}`,
              draft: false,
              prerelease: false,
            });
            console.log(`Created release ${release.data.html_url}`);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure npm for publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Publish to npm
        run: npm publish
